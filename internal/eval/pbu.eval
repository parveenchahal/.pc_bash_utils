#!/usr/bin/env bash

source pbu.read_input.sh

internal_args=()
external_args=()

pbash.args.split_with_double_hyphen --args1 internal_args --args2 external_args -- "$@"

[ "$(pbu.arrays.size ${external_args[@]})" == "0" ] && { pbu.errors.echo "No external args found"; exit 1; }

pbash.args.extract -s v -l verbose -o verbose -d 'false' -- "${internal_args[@]}"
pbash.args.extract -s c -l confirmation -o confirmation -d 'false' -- "${internal_args[@]}"
pbash.args.extract -l serialized_args -o serialized_args -d 'false' -- "${internal_args[@]}"

if [ "$serialized_args" == "true" ]
then
  [ "$(pbu.arrays.size "${external_args[@]}")" == "1" ] || { pbu.errors.echo "Serialized args should be extact single argument"; exit 1; }
  pbu.eval.deserialize_args "$external_args" || exit 1
  readarray -t deserialized_args <<< "$(pbu.eval.deserialize_args "$external_args")"
  external_args=()
  external_args=( "${deserialized_args[@]}" )
fi

____args____=()

if [ "$(pbu.arrays.size "${external_args[@]}")" == "1" ]
then
  ____args____+=( "${external_args[@]}" )
else
  for ____x____ in "${external_args[@]}"
  do
    ____args____+=( "$(pbu.eval.format_string "$____x____")" )
  done
fi

[[ "$verbose" == "true" || "$confirmation" == "true" ]] && echo "Executing command: ${____args____[@]}"

[ "$confirmation" == "true" ] && { pbu.confirm "Confirm command" || exit 1; }

eval "${____args____[@]}"